{"version":3,"sources":["logo.svg","components/Navigation/Navbar.js","components/Category/CategoryDetail.js","components/Posts/PostDetail.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","useState","categories","setCategories","useEffect","axios","method","url","then","response","data","className","href","type","id","map","c","to","pathname","froDashboard","name","CategoryDetail","match","category","setCategory","posts","setPosts","params","p","title","content","PostDetail","App","path","exect","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAAe,I,iCCyCAA,MApCf,WAEG,MAAsCC,mBAAS,IAA/C,mBAAQC,EAAR,KAAoBC,EAApB,KAWD,OATCC,qBAAU,WACVC,IAAM,CACNC,OAAQ,MACRC,IAAK,wCACFC,MAAK,SAAAC,GACJN,EAAcM,EAASC,WAEzB,IAGD,qBAAKC,UAAU,MAAf,SACJ,sBAAKA,UAAU,gDAAf,UACE,mBAAGA,UAAU,eAAeC,KAAK,IAAjC,oBACA,wBAAQD,UAAU,iBAAiBE,KAAK,SAAS,cAAY,WAAW,cAAY,aAAa,gBAAc,YAAY,gBAAc,QAAQ,aAAW,oBAA5J,SACE,sBAAMF,UAAU,0BAElB,qBAAKA,UAAU,2BAA2BG,GAAG,YAA7C,SACE,qBAAIH,UAAU,aAAd,UACCT,EAAWa,KAAK,SAAAC,GAAC,OAClB,cAAC,IAAD,CAAML,UAAU,WAAWM,GAAI,CAACC,SAAS,aAAD,OAAcF,EAAEF,GAAhB,KAAuBK,cAAa,GAA5E,SAAsFH,EAAEI,UAEtF,oBAAIT,UAAU,wBCWLU,MArCf,YAAkC,IAATC,EAAQ,EAARA,MAErB,EAAgCrB,mBAAS,IAAzC,mBAAOsB,EAAP,KAAiBC,EAAjB,KACA,EAA0BvB,mBAAS,IAAnC,mBAAOwB,EAAP,KAAcC,EAAd,KACMZ,EAAKQ,EAAMK,OAAOb,GAYxB,OAVAV,qBAAU,WAENC,IAAM,CACFC,OAAQ,MACRC,IAAI,sCAAD,OAAwCO,EAAxC,OACJN,MAAK,SAAAC,GACJe,EAAYf,EAASC,MACrBgB,EAASjB,EAASC,KAAKe,YAE5B,CAACX,IAEA,+CACiBS,EAAST,GAE3B,2CAAa,iCAASS,EAASH,OAA/B,OACC,uBACA,qBAAKT,UAAU,MAAf,SACKc,EAAMV,KAAI,SAAAa,GAAC,OACZ,sBAAKjB,UAAU,WAAf,UACI,6BAAKiB,EAAEC,QACP,4BAAID,EAAEE,UACN,4BAAIF,EAAEd,KACN,cAAC,IAAD,CAAMG,GAAI,CAAEC,SAAS,UAAD,OAAYU,EAAEd,IAAMK,cAAa,GAArD,sBAJ2BS,EAAEd,aCL9BiB,MApBf,YAA6B,IAART,EAAO,EAAPA,MACjB,EAAyBrB,mBAAS,IAAlC,mBAAOwB,EAAP,KAAaC,EAAb,KACMZ,EAAKQ,EAAMK,OAAOb,GAUxB,OATAV,qBAAU,WAENC,IAAM,CACNC,OAAQ,MACRC,IAAI,mCAAD,OAAqCO,KACrCN,MAAM,SAAAC,GACLiB,EAASD,QAEf,CAACX,IAEC,gDACkBW,EAAMX,GACpB,uCAAS,iCAASW,EAAMI,e,OCOrBG,MAff,WAEE,OACE,qBAAKrB,UAAU,MAAf,SACI,eAAC,IAAD,WACI,cAAC,EAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAOsB,KAAK,aAAaC,OAAK,EAACC,UAAWJ,IAC1C,cAAC,IAAD,CAAOE,KAAK,gBAAgBC,OAAK,EAACC,UAAWd,aCN9Ce,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9B,MAAK,YAAkD,IAA/C+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7fd5c9b3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport  {Link} from \"react-router-dom\";\n\nfunction Navbar() {\n\n   const [ categories, setCategories ] = useState([])\n\n   useEffect(() => {\n   axios({\n   method: \"GET\",\n   url: \"http://127.0.0.1:8000/api/category/\"\n   }).then(response => {\n       setCategories(response.data)\n   })\n   },[])\n\n  return (\n    <div className=\"App\">\n<nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <a className=\"navbar-brand\" href=\"#\">Navbar</a>\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span className=\"navbar-toggler-icon\"></span>\n  </button>\n  <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n    <ul className=\"navbar-nav\">\n    {categories.map( c => (\n    <Link className=\"nav-link\" to={{pathname:`/category/${c.id}/`, froDashboard:false }}>{c.name}</Link>\n        ))}\n      <li className=\"nav-item\">\n      </li>\n\n\n    </ul>\n  </div>\n</nav>\n    </div>\n  );\n}\n\nexport default Navbar;","import React, { useState, useEffect } from 'react';\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\n\nfunction CategoryDetail({match}) {\n\n    const [category, setCategory] = useState({})\n    const [posts, setPosts] = useState([])\n    const id = match.params.id\n\n    useEffect(() => {\n\n        axios({\n            method: \"GET\",\n            url: `http://127.0.0.1:8000/api/category/${id}/`\n        }).then(response => {\n            setCategory(response.data)\n            setPosts(response.data.posts)\n        })\n    }, [id])\n    return(\n        <div>\n            Category id {category.id}\n\n       <p>Category: <strong>{category.name}</strong> </p>\n        <hr/>\n        <div className=\"row\">\n            {posts.map(p =>  (\n            <div className=\"col-md-4\" key={p.id}>\n                <h4>{p.title}</h4>\n                <p>{p.content}</p>\n                <p>{p.id}</p>\n                <Link to={{ pathname: `/posts/${p.id}`, froDashboard:false }}>detail</Link>\n        </div>\n                ))}\n        </div>\n        </div>\n        )\n     }\n\n\nexport default CategoryDetail;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction PostDetail({match}){\n    const [posts,setPosts] = useState({})\n    const id = match.params.id\n    useEffect(() => {\n\n        axios({\n        method: \"GET\",\n        url: `http://127.0.0.1:8000/api/posts/${id}`\n        }).then( response => {\n            setPosts(posts)\n        })\n    },[id])\n    return(\n        <div>\n            Post with id {posts.id}\n            <p>Title <strong>{posts.title}</strong></p>\n        </div>\n    )\n    \n}\nexport default PostDetail;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navbar from \"./components/Navigation/Navbar\";\nimport CategoryDetail from \"./components/Category/CategoryDetail\";\nimport PostDetail from \"./components/Posts/PostDetail\";\nimport {BrowserRouter as Router,Switch,Route} from \"react-router-dom\";\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n        <Router>\n            <Navbar/>\n            <Switch>\n                <Route path=\"/posts/:id\" exect component={PostDetail} />\n                <Route path=\"/category/:id\" exect component={CategoryDetail} />\n            </Switch>\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}